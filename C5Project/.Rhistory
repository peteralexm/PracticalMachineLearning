download.file("https:\\d396qusza40orc.cloudfront.net\getdata%2Fdata%2Fss06hid.csv", "C:\Users\Петя\Documents\datasciencecoursera")
open.xls("C:\Users\Петя\Documents\datasciencecoursera\Assignment3\getdata_data_ss06hid.xlsx")
open.xls("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_ss06hid.xlsx")
read.xls("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_ss06hid.xlsx")
read.xls("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_ss06hid.xlsx")
library(xlsx)
library("xlsx")
read.xlsx("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_ss06hid.xlsx")
install.packages("xlsx")
library("xlsx")
read.xlsx("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_ss06hid.xlsx")
?read.xlsx
read.xlsx("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_ss06hid.xlsx",1)
read.xlsx("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_ss06hid.xlsx",sheetIndex = 1)
read.csv("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_ss06hid.xlsx")
read.csv("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_ss06hid.csv")
df <- read.csv("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_ss06hid.csv")
View(df)
length[df$VAL==24]
df$VAL==24
sum(df$VAL==24)
sum(df$VAL==24, na.rm=false)
nrow(subset(df, df$VAL==24))
df$FES
df <- reas.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", 1)
df <- read.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", 1)
df <- read.xlsx("https:/d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", 1)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "C:\Users\Петя\Documents\datasciencecoursera")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "C:/Users/Петя/Documents/datasciencecoursera")
read.xlsx("C:\Users\Петя\Documents\datasciencecoursera\Assignment3\getdata_data_DATA.gov_NGAP.xlsx", sheetIndex==1)
read.xlsx("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_DATA.gov_NGAP.xlsx", sheetIndex==1)
library(xlsx)
read.xlsx("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_DATA.gov_NGAP.xlsx", sheetIndex==1)
read.xlsx("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_DATA.gov_NGAP.xlsx", sheetIndex=1)
read.xlsx("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_DATA.gov_NGAP.xlsx", sheetIndex=1, startRow=18, endRow=23)
dat <- read.xlsx("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_DATA.gov_NGAP.xlsx", sheetIndex=1, rowIndex=c(18:23), colindex=c(7:15))
dat <- read.xlsx("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_DATA.gov_NGAP.xlsx", sheetIndex=1, rowIndex=c(18:23), colIndex=c(7:15))
dat
sum(dat$Zip*dat$Ext,na.rm=T)
?read.xml
library(xml)
library(XML)
install.packages("XML")
library(XML)
?read.xml
doc <- xmltreeparse("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_restaurants.xml")
doc <- xmlTreeParse("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_restaurants.xml")
rootNode <- xmlRoot(doc)
rootNode
rootNode[[1]]
rootNode[[1]]
xpathSApply(rootNode, "//zipcode",xmlValue)
doc <- xmlTreeParse("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_restaurants.xml", useInternalNodes = TRUE)
rootNode <- xmlRoot(doc)
rootNode[[1]]
xpathSApply(rootNode, "//zipcode",xmlValue)
z <- xpathSApply(rootNode, "//zipcode",xmlValue)
z[1]
z[="21231"]
z["21231"]
lapply(z, FUN = "21231")
z = "21231"
z <- xpathSApply(rootNode, "//zipcode",xmlValue)
z == "21231"
sum(z == "21231")
install.packages("data.table")
libraty(data.table)
library(data.table)
?fread
DT <- fread("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_ss06pid.csv")
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(mean(DT$pwgtp15,by=DT$SEX))
?system.time
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15), mean(DT[DT$SEX==2,]$pwgtp15))
df <- read.csv("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_ss06hid.csv")
df$VAL
sum(df$VAL==24)
sum(df$VAL=24)
df$VAL==24
sum(df$VAL==24)
na.omit(df$VAL)
na.omit(df$VAL)
?na.omit
df$VAL
na.omit(df$VAL)
na.exclude(df$VAL)
sum(na.omit(df$VAL)==24)
df$FES
DT <- read.xlsx("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_DATA.gov_NGAP.xlsx", rosIndex=c(18:23), colIndex=c(7:15))
DT <- read.xlsx("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_DATA.gov_NGAP.xlsx", sheetIndex=1, rowIndex=c(18:23), colIndex=c(7:15))
dat <- read.xlsx("C:/Users/Петя/Documents/datasciencecoursera/Assignment3/getdata_data_DATA.gov_NGAP.xlsx", sheetIndex=1, rowIndex=c(18:23), colIndex=c(7:15))
sum(dat$Zip*dat$Ext,na.rm=T)
z
sum(z=="21231")
install.packages("sqldf")
library(sqldf)
acs <- read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week2/getdata_data_ss06pid.csv")
head(acs)
select_acs <- acs[AGEP<50]
select_acs <- acs[acs$AGEP<50]
select_acs <- subset(acs, AGEP<50, select=pwgtp1)
View(select_acs)
a <- sqldf("select * from acs")
a <- sqldf("select pwgtp1 from acs where AGEP < 50")
a <- sqldf("select * from acs where AGEP < 50 and pwgtp1")
a <- sqldf("select pwgtp1 from acs")
acs_2 <- unique(acs$AGEP)
a <- sqldf("select unique AGEP from acs")
a <- sqldf("select distinct pwgtp1 from acs")
a <- sqldf("select AGEP where unique from acs")
a <- sqldf("select distinct AGEP from acs")
?nchar()
connection=url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode=readLines(connection)
close(connection)
htmlCode
htmlCode[128]
nchar(htmlCode[10])
nchar(htmlCode[10, 20])
nchar(htmlCode[c(10, 20)])
nchar(htmlCode[c(10, 20, 30, 100)])
?read.fwf
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
head(x)
sum(x$V4)
df <- read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_ss06hid.csv")
agricultureLogical <- df[df$ACR==3 & df$AGS==6]
agricultureLogical <- df[,df$ACR==3 & df$AGS==6]
agricultureLogical <- df[,(df$ACR==3 & df$AGS==6)]
agricultureLogical <- df[(df$ACR==3 & df$AGS==6),]
View(df)
View(agricultureLogical)
agricultureLogical <- df[ ,df$ACR=3 & df$AGS=6]
agricultureLogical <- df[ ,df$ACR==3 & df$AGS==6]
agricultureLogical <- df[(df$ACR==3 & df$AGS==6),]
View(agricultureLogical)
agricultureLogical <- df[which(df$ACR==3 & df$AGS==6),]
View(agricultureLogical)
which(df$ACR==3)
which(df$ACR==3 & df$AGS==6)
which(df$ACR==3 & df$AGS==6)
count(which(df$ACR==3 & df$AGS==6))
sum(which(df$ACR==3 & df$AGS==6))
install.packages("jpeg")
library(jpeg)
jpeg <- readJPEG("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_jeff.jpeg")
?readJPEG
jpeg <- readJPEG(source="C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_jeff.jpeg", native=TRUE)
jpeg <- readJPEG(source="C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_jeff.JPEG", native=TRUE)
jpeg <- readJPEG(source="C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_jeff.jpg", native=TRUE)
?quantile()
quantile(jpeg, c(30,80))
quantile(jpeg, c(0.3,0.8))
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
View(GDP)
View(Country)
GDP <- GDP[-c(1:4),c(1,2,4,5)]
Country <- Country[,c(1,2)]
install.packages("dplyr")
library(dplyr)
?dplyr
library(dplyr)
library(rlang)
library(dplyr)
library("dplyr")
install.packages("dplyr")
library(dplyr)
colnames(GDP) <- c("CountryCode", "Rank", "CountryName", "GDP")
?merge
merged_GDP <- merge(GDP, Country, by.x="CountryCode", by.y="CountryCode")
View(merged_GDP)
merged_GDP <- merged_GDP(-merged_GDP$CountryCode=="",)
merged_GDP <- merged_GDP[-merged_GDP$CountryCode=="",]
merged_GDP <- merged_GDP[merged_GDP$CountryCode<>"",]
merged_GDP <- merged_GDP[!merged_GDP$CountryCode=="",]
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
Country <- Country[,c(1,2)]
colnames(GDP) <- c("CountryCode", "Rank", "CountryName", "GDP")
merged_GDP <- merge(GDP, Country, by.x="CountryCode", by.y="CountryCode")
GDP <- GDP[!(GDP$CountryCode=="")|!(GDP$CountryCode==""),]
GDP$Rank[191]
GDP$Rank[[195]]
GDP$Rank
GDP$Rank[1]
GDP$Rank[195]
GDP <- GDP[!(GDP$CountryCode=="")|!(GDP$Rank==""),]
GDP <- GDP[!(GDP$CountryCode=="")| !(GDP$Rank==" "),]
GDP[195,]
GDP[195,GDP$Rank]
GDP[195,"Rank"]
GDP <- GDP[!(GDP$CountryCode=="")| !(GDP$Rank==" "),]
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
Country <- Country[,c(1,2)]
colnames(GDP) <- c("CountryCode", "Rank", "CountryName", "GDP")
GDP <- GDP[!(GDP$CountryCode=="")| !(GDP$Rank==""),]
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
Country <- Country[,c(1,2)]
colnames(GDP) <- c("CountryCode", "Rank", "CountryName", "GDP")
GDP <- GDP[!(GDP$CountryCode=="")& !(GDP$Rank==""),]
merged_GDP <- merge(GDP, Country, by.x="CountryCode", by.y="CountryCode")
View(merged_GDP)
merged_GDP$Rank <- as.numeric(merged_GDP$Rank)
GDP <- GDP[!(GDP$CountryCode=="")|!(GDP$Rank==""),]
merged_GDP <- arange(merged_GDP, Rank)
merged_GDP <- arrange(merged_GDP, Rank)
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
Country <- Country[,c(1,2)]
colnames(GDP) <- c("CountryCode", "Rank", "CountryName", "GDP")
GDP <- GDP[!(GDP$CountryCode=="")& !(GDP$Rank==""),]
merged_GDP <- merge(GDP, Country, by.x="CountryCode", by.y="CountryCode")
merged_GDP$Rank <- as.numeric(merged_GDP$Rank)
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
Country <- Country[,c(1,2)]
colnames(GDP) <- c("CountryCode", "Rank", "CountryName", "GDP")
GDP <- GDP[!(GDP$CountryCode=="")& !(GDP$Rank==""),]
merged_GDP <- merge(GDP, Country, by.x="CountryCode", by.y="CountryCode")
merged_GDP <- arrange(merged_GDP, Rank)
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
Country <- Country[,c(1,2)]
colnames(GDP) <- c("CountryCode", "Ranking", "CountryName", "GDP")
GDP <- GDP[!(GDP$CountryCode=="")& !(GDP$Ranking==""),]
merged_GDP <- merge(GDP, Country, by.x="CountryCode", by.y="CountryCode")
merged_GDP$Rank <- as.numeric(merged_GDP$Ranking)
merged_GDP <- arrange(merged_GDP, desc(Ranking))
merged_GDP$Ranking <- as.numeric(merged_GDP$Ranking)
merged_GDP <- arrange(merged_GDP, desc(Ranking))
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
Country <- Country[,c(1,2)]
colnames(GDP) <- c("CountryCode", "Ranking", "CountryName", "GDP")
GDP <- GDP[!(GDP$CountryCode=="")& !(GDP$Ranking==""),]
merged_GDP <- merge(GDP, Country, by.x="CountryCode", by.y="CountryCode")
merged_GDP$Ranking <- as.numeric(merged_GDP$Ranking)
merged_GDP <- arrange(merged_GDP, desc(Ranking))
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
Country <- Country[,c(1,2)]
colnames(GDP) <- c("CountryCode", "Ranking", "CountryName", "GDP")
GDP <- GDP[!(GDP$CountryCode=="")& !(GDP$Ranking==""),]
merged_GDP <- merge(GDP, Country, by.x="CountryCode", by.y="CountryCode")
summary(merged_GDP)
str(merged_GDP)
?read.csv
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
Country <- Country[,c(1,2)]
colnames(GDP) <- c("CountryCode", "Ranking", "CountryName", "GDP")
GDP <- GDP[!(GDP$CountryCode=="")& !(GDP$Ranking==""),]
merged_GDP <- merge(GDP, Country, by.x="CountryCode", by.y="CountryCode")
merged_GDP$Ranking <- as.character(merged_GDP$Ranking)
merged_GDP <- arrange(merged_GDP, desc(Ranking))
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
Country <- Country[,c(1,2)]
colnames(GDP) <- c("CountryCode", "Ranking", "CountryName", "GDP")
GDP <- GDP[!(GDP$CountryCode=="")& !(GDP$Ranking==""),]
merged_GDP <- merge(GDP, Country, by.x="CountryCode", by.y="CountryCode")
merged_GDP$Ranking <- as.numeric(as.character(merged_GDP$Ranking))
merged_GDP <- arrange(merged_GDP, desc(Ranking))
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
View(GDP)
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
View(Country)
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
Country <- Country[,c(1,3)]
colnames(GDP) <- c("CountryCode", "Ranking", "CountryName", "GDP")
GDP <- GDP[!(GDP$CountryCode=="")& !(GDP$Ranking==""),]
merged_GDP <- merge(GDP, Country, by.x="CountryCode", by.y="CountryCode")
merged_GDP$Ranking <- as.numeric(as.character(merged_GDP$Ranking))
?mutate
library(dplyr)
?summarize
group_GDP <- group_by(merged_GDP, Income.Group)
View(group_GDP)
group_GDP
summarize(group_GDP, med_rank=median(Ranking))
summarize(group_GDP, med_rank=mean(Ranking))
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
GDP <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_GDP.csv")
Country <-read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week3/getdata_data_EDSTATS_Country.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
Country <- Country[,c(1,3)]
colnames(GDP) <- c("CountryCode", "Ranking", "CountryName", "GDP")
GDP <- GDP[!(GDP$CountryCode=="")& !(GDP$Ranking==""),]
merged_GDP <- merge(GDP, Country, by.x="CountryCode", by.y="CountryCode")
merged_GDP$Ranking <- as.numeric(as.character(merged_GDP$Ranking))
View(merged_GDP)
quant_GDP <- mitate(GDP, qGDP=quantile(Ranking, c(0.2, 0.4, 0.6, 0.8, 1)))
quant_GDP <- mutate(GDP, qGDP=quantile(Ranking, c(0.2, 0.4, 0.6, 0.8, 1)))
merged_GDP$Ranking <- as.numeric(as.character(merged_GDP$Ranking))
quant_GDP <- mutate(GDP, qGDP=quantile(Ranking, c(0.2, 0.4, 0.6, 0.8, 1)))
merged_GDP$qGDP=quantile(Ranking, c(0.2, 0.4, 0.6, 0.8, 1))
merged_GDP$qGDP=quantile(merged_GDP$Ranking, c(0.2, 0.4, 0.6, 0.8, 1))
merged_GDP$qGDP=cut(merged_GDP$Raking, breaks=quantile(merged_GDP$Ranking, c(0.2, 0.4, 0.6, 0.8, 1))
a <- 1
merged_GDP$qGDP=cut(merged_GDP$Raking, breaks=quantile(merged_GDP$Ranking, c(0.2, 0.4, 0.6, 0.8, 1)))
cut(merged_GDP$Raking, breaks=quantile(merged_GDP$Ranking, c(0.2, 0.4, 0.6, 0.8, 1)))
cut(merged_GDP$Raking, breaks=quantile(merged_GDP$Ranking)))
cut(merged_GDP$Ranking, breaks=quantile(merged_GDP$Ranking, c(0.2, 0.4, 0.6, 0.8, 1)))
merged_GDP$qGDP=cut(merged_GDP$Ranking, breaks=quantile(merged_GDP$Ranking, c(0.2, 0.4, 0.6, 0.8, 1)))
merged_GDP$qGDP=cut(merged_GDP$Ranking, breaks=quantile(merged_GDP$Ranking))
merged_GDP$qGDP=cut(merged_GDP$Ranking, breaks=quantile(merged_GDP$Ranking, c(0, 0.2, 0.4, 0.6, 0.8, 1)))
merged_GDP$qGDP=cut(merged_GDP$Ranking, breaks=factor(quantile(merged_GDP$Ranking, c(0, 0.2, 0.4, 0.6, 0.8, 1)), c(1,2,3,4,5))
merged_GDP$qGDP=cut(merged_GDP$Ranking, breaks=factor(quantile(merged_GDP$Ranking, c(0, 0.2, 0.4, 0.6, 0.8, 1)), c(1,2,3,4,5)))
merged_GDP$qGDP=cut(merged_GDP$Ranking, breaks=quantile(merged_GDP$Ranking, c(0, 0.2, 0.4, 0.6, 0.8, 1)))
table(merged_GDP$qGDP, merged_GDP$Income.Group)
df <- read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week4/getdata_data_ss06hid.csv")
names(df)
?strsplit()
df_names <- strsplit(names(df),"wgtp")
df_names[123]
df <- read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week4/getdata_data_GDP.csv")
View(df)
GDP <- read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week4/getdata_data_GDP.csv")
View(GDP)
GDP <- read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week4/getdata_data_GDP.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
colnames(GDP) <- c("CountryCode", "Ranking", "CountryName", "GDP")
GDP <- GDP[!(GDP$GDP=="")& !(GDP$GDP==".."),]
gsub(",","",GDP$GDP)
GDP$GDP <- gsub(",","",GDP$GDP)
mean(GDP$GDP)
GDP$GDP <- as.numeric(gsub(",","",GDP$GDP))
mean(GDP$GDP)
GDP <- read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week4/getdata_data_GDP.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
colnames(GDP) <- c("CountryCode", "Ranking", "CountryName", "GDP")
GDP <- GDP[!(GDP$CountryCode=="")& !(GDP$Ranking==""),]
GDP$GDP <- as.numeric(gsub(",","",GDP$GDP))
mean(GDP$GDP)
countryNames <- GDP$CountryName
grep("^United",countryNames)
EDU <- read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week4/getdata_data_EDSTATS_Country.csv")
View(EDU)
EDU <- EDU[,c(EDU$CountryCode, EDU$Special.Notes)]
EDU <- EDU[,c(CountryCode, Special.Notes)]
EDU <- data.frame(EDU$CountryCode, EDU$Special.Notes]
EDU <- data.frame(EDU$CountryCode, EDU$Special.Notes)
merged_df <- merge(GDP, EDU, by.x=CountryCode, by.y=EDU.CountryCode)
merged_df <- merge(GDP, EDU, by.x="CountryCode", by.y="EDU.CountryCode")
View(merged_df)
meged_df$EDU.Special.Notes="*Fiscal year end: June"
r
merged_df$EDU.Special.Notes="*Fiscal year end: June"
GDP <- read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week4/getdata_data_GDP.csv")
GDP <- GDP[-c(1:4),c(1,2,4,5)]
colnames(GDP) <- c("CountryCode", "Ranking", "CountryName", "GDP")
GDP <- GDP[!(GDP$CountryCode=="")& !(GDP$Ranking==""),]
EDU <- read.csv("C:/Users/Петя/Documents/datasciencecoursera/C3Week4/getdata_data_EDSTATS_Country.csv")
EDU <- data.frame(EDU$CountryCode, EDU$Special.Notes)
merged_df <- merge(GDP, EDU, by.x="CountryCode", by.y="EDU.CountryCode")
merged_df$EDU.Special.Notes=="*Fiscal year end: June"
merged_df$EDU.Special.Notes==[*Fiscal year end: June]
grep("*Fiscal year end: June*",merged_df$EDU.Special.Notes)
length(grep("*Fiscal year end: June*",merged_df$EDU.Special.Notes))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
sampleTimes
weekdays(sampleTimes)=="Monday"
weekdays(sampleTimes)
sum(weekdays(sampleTimes)=="понедельник")
years(sampleTimes)
year(sampleTimes)
install.packages("lubridate")
library(lubridate)
year(sampleTimes)
sum(year(sampleTimes))==2012
sum(year(sampleTimes)==2012)
sum(year(sampleTimes)==2012 & weekdays(sampleTimes)=="понедельник")
a <- read.csv("C:/Users/Петя/Downloads/SecondIndependentDataSet.csv")
View(a)
test <- read.table("C:/Users/Петя/Documents/datasciencecoursera/C3Project/tidy.txt")
View(test)
a <- read.table("C:/Users/Петя/Downloads/AverageValue_Mean_STD.txt")
a <- read.table("C:/Users/Петя/Downloads/tidy_data.txt")
a <- read.table("C:/Users/Петя/Downloads/tidy_data.txt")
View(test)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
BodyWeight
xyplot(weight ~ Time | Diet, BodyWeight, text(c("a","b","c")))
xyplot(weight ~ Time | Diet, BodyWeight, text("c"))
xyplot(weight ~ Time | Diet, BodyWeight)
text("a")
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
library(ggplot2movies)
library(ggplot2movies)
download.packages("ggplot2movies")
install.packages("ggplot2movies")
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
ggplot(movies, aes(votes, rating))
df <- read.csv("./RepData_PeerAssessment1/activity.csv")
setwd("./datasciencecoursera/C5Project")
df <- read.csv("./RepData_PeerAssessment1/activity.csv")
View(df)
?cbind()
Sum_steps <- aggregate(cbind(steps)~date, data=df, FUN=sum)
View(Sum_steps)
ggplot(Sum_steps, aes(steps)+geom_histogram()
ggplot(Sum_steps, aes(steps)+geom_histogram())
ggplot(Sum_steps, aes(steps))+geom_histogram()
library(ggplot2)
ggplot(Sum_steps, aes(steps))+geom_histogram()
ggplot(Sum_steps, aes(steps))+geom_histogram(color="blue")
ggplot(Sum_steps, aes(steps))+geom_histogram()+
labs(title="Histogram for Steps") +  labs(x="Age", y="Count")
ggplot(Sum_steps, aes(steps))+geom_histogram()+
labs(title="Histogram for Steps") +  labs(x="Age", y="Count")+ylim(0,10)
ggplot(Sum_steps, aes(steps))+geom_histogram()+
labs(title="Histogram for Steps") +  labs(x="Age", y="Count")+ylim(0,10)+
geom_vline(xintercept=mean(Sum_steps$steps), color="red")
ggplot(Sum_steps, aes(steps))+geom_histogram()+
labs(title="Histogram for Steps") +  labs(x="Age", y="Count")+ylim(0,10)+
geom_vline(xintercept=mean(Sum_steps$steps), color="red")+
geom_vline(xintercept=median(Sum_steps$steps), color="blue")
median(Sum_steps$steps)
mean(Sem_steps$steps)
mean(Sum_steps$steps)
pattern <- aggregate(cbind(steps)~interval, data=df, FUN=mean)
View(pattern)
ggplot(pattern, aes(x=interval, y=steps)
ggplot(pattern, aes(x=interval, y=steps))
ggplot(pattern, aes(x=interval, y=steps))+geom_line()
max(pattern$interval)
pattern$interval[1]
pattern$interval[100]
pattern$interval[which.max(pattern$steps)]
sum(is.na(df$steps))
df$steps[is.na(df$steps)] <-pattern$steps[pattern$interval==df$interval[is.na(df$steps)]]
df <- read.csv("./RepData_PeerAssessment1/activity.csv")
df$steps[is.na(df$steps)] <-pattern$steps[pattern$interval %in% df$interval[is.na(df$steps)]]
sum(is.na(df$steps))
Sum_steps <- aggregate(cbind(steps)~date, data=df, FUN=sum)
ggplot(Sum_steps, aes(steps))+geom_histogram()+
labs(title="Histogram for Steps") +  labs(x="Age", y="Count")+ylim(0,10)+
geom_vline(xintercept=mean(Sum_steps$steps), color="red")+
geom_vline(xintercept=median(Sum_steps$steps), color="blue")+
scale_colour_manual(name="Line Color", values=c(myline1="red", myline2="blue", myline3="purple"))
View(df)
df <- read.csv("./RepData_PeerAssessment1/activity.csv")
View(df)
df$steps[is.na(df$steps)] <-pattern$steps[pattern$interval %in% df$interval[is.na(df$steps)]]
Sum_steps <- aggregate(cbind(steps)~date, data=df, FUN=sum)
ggplot(Sum_steps, aes(steps))+geom_histogram()+
labs(title="Histogram for Steps") +  labs(x="Age", y="Count")+ylim(0,10)+
geom_vline(xintercept=mean(Sum_steps$steps), color="red")+
geom_vline(xintercept=median(Sum_steps$steps), color="blue")+
scale_colour_manual(name="Line Color", values=c(myline1="red", myline2="blue", myline3="purple"))
median(Sum_steps$steps)
mean(Sum_steps$steps)
df <- read.csv("./RepData_PeerAssessment1/activity.csv")
ggplot(Sum_steps, aes(steps))+geom_histogram()+
labs(title="Histogram for Steps") +  labs(x="Age", y="Count")+ylim(0,10)+
geom_vline(xintercept=mean(Sum_steps$steps), color="red")+
geom_vline(xintercept=median(Sum_steps$steps, na.rm=FALSE), color="blue")+
scale_colour_manual(name="Line Color", values=c(myline1="red", myline2="blue", myline3="purple"))
quantile(Sum_steps$steps, 0.1)
quantile(Sum_steps$steps, 0.5)
mean(Sum_steps$steps)
